---
name: publish & deploy

on:
  push:
    branches:
      - main

jobs:
  ghcr_publish_catalog:
    name: publish catalog on GHCR
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: publish catalog.data.gov
        uses: docker/build-push-action@v2
        with:
          context: ckan
          push: true
          tags: ghcr.io/gsa/catalog.data.gov:latest
  
  ghcr_publish_solr:
    name: publish solr on GHCR
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: publish catalog.data.gov.solr
        uses: docker/build-push-action@v2
        with:
          context: solr
          push: true
          tags: ghcr.io/gsa/catalog.data.gov.solr:latest

  ghcr_publish_db:
    name: publish catalog db on GHCR
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: login to ghcr
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: publish catalog.data.gov.db
        uses: docker/build-push-action@v2
        with:
          context: postgresql
          push: true
          tags: ghcr.io/gsa/catalog.data.gov.db:latest

  vendor:
    name: vendor dependencies
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: vendor dependencies
        run: ./vendor-requirements.sh
      - uses: actions/upload-artifact@v2
        with:
          name: python-vendored
          path: vendor/
          if-no-files-found: error

  create-cloudgov-services-staging:
    name: create services (staging)
    environment: staging
    runs-on: ubuntu-latest
    container:
      image: cloudfoundry/cli:8
      env:
        org: gsa-datagov
        space: staging
        user: ${{secrets.CF_SERVICE_USER}}
        password: ${{secrets.CF_SERVICE_AUTH}}
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: auth
        run: ./cfauth.sh
      - name: create services
        run: ./create-cloudgov-services.sh
  deploy-staging:
    name: deploy (staging)
    environment: staging
    runs-on: ubuntu-latest
    needs:
      - vendor
      - create-cloudgov-services-staging
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: python-vendored
          path: vendor
      - name: deploy-ckan
        uses: usds/cloud-gov-cli@master
        with:
          command: push catalog --vars-file vars.staging.yml --strategy rolling
          org: gsa-datagov
          space: staging
          user: ${{secrets.CF_SERVICE_USER}}
          password: ${{secrets.CF_SERVICE_AUTH}}
      - name: smoke test
        run: |
          sleep 10
          curl --fail --silent https://catalog-stage-datagov.app.cloud.gov/api/action/status_show?$(date +%s)

  create-cloudgov-services-production:
    name: create services (production)
    environment: production
    runs-on: ubuntu-latest
    container:
      image: cloudfoundry/cli:8
      env:
        org: gsa-datagov
        space: prod
        user: ${{secrets.CF_SERVICE_USER}}
        password: ${{secrets.CF_SERVICE_AUTH}}
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: auth
        run: ./cfauth.sh
      - name: create services
        run: ./create-cloudgov-services.sh

  deploy-production:
    name: deploy (production)
    environment: production
    runs-on: ubuntu-latest
    needs:
      - create-cloudgov-services-production
      - deploy-staging
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: python-vendored
          path: vendor
      - name: deploy-ckan
        uses: usds/cloud-gov-cli@master
        with:
          command: push catalog --vars-file vars.production.yml --strategy rolling
          org: gsa-datagov
          space: prod
          user: ${{secrets.CF_SERVICE_USER}}
          password: ${{secrets.CF_SERVICE_AUTH}}
      - name: deploy-gather
        uses: usds/cloud-gov-cli@master
        with:
          command: push catalog-gather --vars-file vars.production.yml
          org: gsa-datagov
          space: prod
          user: ${{secrets.CF_SERVICE_USER}}
          password: ${{secrets.CF_SERVICE_AUTH}}
      - name: deploy-fetch
        uses: usds/cloud-gov-cli@master
        with:
          command: push catalog-fetch --vars-file vars.production.yml
          org: gsa-datagov
          space: prod
          user: ${{secrets.CF_SERVICE_USER}}
          password: ${{secrets.CF_SERVICE_AUTH}}
      - name: smoke test
        run: |
          sleep 10
          curl --fail --silent https://catalog-prod-datagov.app.cloud.gov/api/action/status_show?$(date +%s)

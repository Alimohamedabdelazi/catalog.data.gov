---
name: commit

on:
  push:


jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: build
        run: make build
      - name: test
        run: make test
      - name: cypress-artifacs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-artifacts
          path: |
            ./e2e/cypress/screenshots/
            ./e2e/cypress/videos/

  test_importer:
    name: test importer
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: x64
      - name: test_importer
        run: make test-import-tool

  vendor:
    name: vendor dependencies
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: vendor dependencies
        run: ./vendor-requirements.sh
      - uses: actions/upload-artifact@v2
        with:
          name: python-vendored
          path: vendor/
          if-no-files-found: error
  create-cloudgov-services-development:
    name: create services (development)
    environment: development
    runs-on: ubuntu-latest
    container:
      image: cloudfoundry/cli:8
      env:
        org: gsa-datagov
        space: development
        user: ${{secrets.CF_SERVICE_USER}}
        password: ${{secrets.CF_SERVICE_AUTH}}
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: auth
        run: ./cfauth.sh
      - name: create services
        run: ./create-cloudgov-services.sh
  deploy-development:
    if: github.ref == 'refs/heads/develop'
    name: deploy (development)
    environment: development
    runs-on: ubuntu-latest
    needs:
      - vendor
      - create-cloudgov-services-development
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: python-vendored
          path: vendor
      - name: deploy
        uses: usds/cloud-gov-cli@master
        with:
          command: push catalog --vars-file vars.development.yml --strategy rolling
          org: gsa-datagov
          space: development
          user: ${{secrets.CF_SERVICE_USER}}
          password: ${{secrets.CF_SERVICE_AUTH}}
      - name: deploy-gather
        uses: usds/cloud-gov-cli@master
        with:
          command: push catalog-gather --vars-file vars.development.yml
          org: gsa-datagov
          space: development
          user: ${{secrets.CF_SERVICE_USER}}
          password: ${{secrets.CF_SERVICE_AUTH}}
      - name: deploy-fetch
        uses: usds/cloud-gov-cli@master
        with:
          command: push catalog-fetch --vars-file vars.development.yml
          org: gsa-datagov
          space: development
          user: ${{secrets.CF_SERVICE_USER}}
          password: ${{secrets.CF_SERVICE_AUTH}}
      - name: smoke test
        run: |
          sleep 10
          curl --fail --silent https://catalog-dev-datagov.app.cloud.gov/api/action/status_show?$(date +%s)

---
name: commit

on:
  push:


jobs:
  test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: build
        run: make build
      - name: test
        run: make test
      - name: cypress-artifacs
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: cypress-artifacts
          path: |
            ./e2e/cypress/screenshots/
            ./e2e/cypress/videos/

  test_importer:
    name: test importer
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'
          architecture: x64
      - name: test_importer
        run: make test-import-tool

  vendor:
    name: vendor dependencies
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: vendor dependencies
        run: ./vendor-requirements.sh
      - uses: actions/upload-artifact@v2
        with:
          name: python-vendored
          path: vendor/
          if-no-files-found: error

  dev-db-setup:
    if: github.ref == 'refs/heads/develop'
    name: db setup (development)
    environment: development
    runs-on: ubuntu-latest
    steps:
      - name: Check catalog-db
        id: check-catalog-db-dev
        uses: usds/cloud-gov-cli@master
        continue-on-error: true
        with:
          command: service catalog-db
          org: gsa-datagov
          space: development
          user: ${{secrets.CF_SERVICE_USER}}
          password: ${{secrets.CF_SERVICE_AUTH}}
      - name: Create catalog-db if necessary
        if: steps.check-catalog-db-dev.outcome == 'failure'
        uses: usds/cloud-gov-cli@master
        with:
          command: create-service aws-rds small-psql catalog-db --wait
          org: gsa-datagov
          space: development
          user: ${{secrets.CF_SERVICE_USER}}
          password: ${{secrets.CF_SERVICE_AUTH}}
  
  dev-redis-setup:
    if: github.ref == 'refs/heads/develop'
    name: redis setup (development)
    environment: development
    runs-on: ubuntu-latest
    steps:
      - name: Check catalog-redis
        id: check-catalog-redis-dev
        uses: usds/cloud-gov-cli@master
        continue-on-error: true
        with:
          command: service catalog-redis
          org: gsa-datagov
          space: development
          user: ${{secrets.CF_SERVICE_USER}}
          password: ${{secrets.CF_SERVICE_AUTH}}
      - name: Create catalog-redis if necessary
        if: steps.check-catalog-redis-dev.outcome == 'failure'
        uses: usds/cloud-gov-cli@master
        with:
          command: create-service aws-elasticache-redis redis-dev catalog-redis --wait
          org: gsa-datagov
          space: development
          user: ${{secrets.CF_SERVICE_USER}}
          password: ${{secrets.CF_SERVICE_AUTH}}

  dev-solr-setup:
    if: github.ref == 'refs/heads/develop'
    name: solr setup (development)
    environment: development
    runs-on: ubuntu-latest
    steps:
      - name: Check catalog-solr
        id: check-catalog-solr-dev
        uses: usds/cloud-gov-cli@master
        continue-on-error: true
        with:
          command: service catalog-solr
          org: gsa-datagov
          space: development
          user: ${{secrets.CF_SERVICE_USER}}
          password: ${{secrets.CF_SERVICE_AUTH}}
      - name: Create catalog-solr if necessary
        if: steps.check-catalog-solr-dev.outcome == 'failure'
        uses: usds/cloud-gov-cli@master
        with:
          command: create-service solr-cloud base catalog-solr -c solr/service-config.json -b ssb-solr-gsa-datagov-development --wait
          org: gsa-datagov
          space: development
          user: ${{secrets.CF_SERVICE_USER}}
          password: ${{secrets.CF_SERVICE_AUTH}}

  deploy-development:
    if: github.ref == 'refs/heads/develop'
    name: deploy (development)
    environment: development
    runs-on: ubuntu-latest
    needs:
      - vendor
      - dev-db-setup
      - dev-redis-setup
      - dev-solr-setup
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - uses: actions/download-artifact@v2
        with:
          name: python-vendored
          path: vendor
      - name: deploy
        uses: usds/cloud-gov-cli@master
        with:
          command: push catalog --vars-file vars.development.yml --strategy rolling
          org: gsa-datagov
          space: development
          user: ${{secrets.CF_SERVICE_USER}}
          password: ${{secrets.CF_SERVICE_AUTH}}
      - name: deploy-gather
        uses: usds/cloud-gov-cli@master
        with:
          command: push catalog-gather --vars-file vars.development.yml
          org: gsa-datagov
          space: development
          user: ${{secrets.CF_SERVICE_USER}}
          password: ${{secrets.CF_SERVICE_AUTH}}
      - name: deploy-fetch
        uses: usds/cloud-gov-cli@master
        with:
          command: push catalog-fetch --vars-file vars.development.yml
          org: gsa-datagov
          space: development
          user: ${{secrets.CF_SERVICE_USER}}
          password: ${{secrets.CF_SERVICE_AUTH}}
      - name: smoke test
        run: |
          sleep 10
          curl --fail --silent https://catalog-dev-datagov.app.cloud.gov/api/action/status_show?$(date +%s)
